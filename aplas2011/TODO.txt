- Section 1: explain that contexts haven't been formalized in a way
  that captures their informal use.
- Section 2: when discussing Figure 5 language, point to papers set up
  this way (delimited control, CMT, others?)
- Section 3: mechanize the construction of the example pattern used to
  explain how Redex patterns translate into core patterns.
- Section 3: consider explaining the matches judgment form with an
  example, perhaps the matches in Figure 2 (arithmetic language).
- Section 4: address the algorithm's complexity?
- Section 4: backtracking parsers typically use memoization to avoid
  exponential complexity. Mention that we can do the same.
- Appendix: fix "[|", "|]", "->_G", and "-/>_G^*"
- Appendix: update for reordered cases and flattened context data def
